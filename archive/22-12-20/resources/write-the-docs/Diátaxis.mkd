# https://diataxis.fr/


In Diátaxis, each of these modes (or types) answers to a different user need,
fulfills a different purpose and requires a different approach to its creation.


| **Tutorials**          | **How-to Guides**    |
| Learning-Oriented      | Task-Oriented        |
| ---------------------- | -------------------- |
| **Explaination**       | **Reference**        |
| Understanding-Oriented | Information-Oriented |

# https://discuss.python.org/t/adopting-the-diataxis-framework-for-python-documentation/15072

Hello,
On the Docs meeting, everyone was in favor of adopting the Diátaxis framework for
Python documentation. Let me explain what that means to me so we can get a rough
consensus and start work.

Everyone who wants to work on docs editing you should read the Diátaxis docs. They’re
short and (as you’d expect) well written, and will probably answer your questions
if you have any.

The main point, for me, is to keep the target audience in mind when writing docs.
There are four kinds of target audience, and thus four kinds of docs.
The first goal should be to avoid mixing them, rather than to cover all four quadrants.
Mixing them confuses all readers; not including the HOWTO guide or the tutorial just
means those readers will go to Stack Overflow or Real Python instead.

Another point, from "How to use Diátaxis" (the last section, but a very important one),
is Work one step at a time. Adopting Diátaxis doesn’t mean we need to restructure the
existing docs now. Rather, it should allow us to find small tasks for anyone who wants
to help. That currently seems to be a bottleneck – "improve the docs" is so vast and
directionless that we can’t seem to get anything started. But if we adopt a framework
for the big picture, we can small steps toward it.

So, here’s the proposal: Let’s adopt Diátaxis as a guide for Python docs, and start improving.
Anyone against?


